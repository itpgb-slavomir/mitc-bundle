<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">/var/www/jahman/workspace/mitc-project/src/SK</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.cache_dir">/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/var/www/jahman/workspace/mitc-project/src/SK/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SKITCBundle">SK\ITCBundle\SKITCBundle</parameter>
      <parameter key="MakerBundle">Symfony\Bundle\MakerBundle\MakerBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/var/www/jahman/workspace/mitc-project/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SKITCBundle" type="collection">
        <parameter key="path">/var/www/jahman/workspace/mitc-project/src/SK/ITCBundle</parameter>
        <parameter key="namespace">SK\ITCBundle</parameter>
      </parameter>
      <parameter key="MakerBundle" type="collection">
        <parameter key="path">/var/www/jahman/workspace/mitc-project/vendor/symfony/maker-bundle/src</parameter>
        <parameter key="namespace">Symfony\Bundle\MakerBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">SK_ITCBundle_KernelDevDebugContainer</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="container.dumper.inline_factories">true</parameter>
    <parameter key="kernel.secret">ITC IS REALLY SECURE Bundle!</parameter>
    <parameter key="framework.http_method_override">true</parameter>
    <parameter key="framework.default_locale">cs</parameter>
    <parameter key="framework.secret">ITC IS REALLY SECURE Bundle!</parameter>
    <parameter key="framework.trusted_proxies">192.0.0.1, 10.0.0.0/8</parameter>
    <parameter key="framework.trusted_host">^localhost$</parameter>
    <parameter key="framework.test">false</parameter>
    <parameter key="framework.fragments.enabled">true</parameter>
    <parameter key="framework.fragments.path">_fragments</parameter>
    <parameter key="framework.router.http_port">80</parameter>
    <parameter key="framework.router.https_port">443</parameter>
    <parameter key="framework.annotations.cache">file</parameter>
    <parameter key="framework.annotations.debug">true</parameter>
    <parameter key="framework.annotations.file_cache_dir">/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/annotations</parameter>
    <parameter key="framework.form.csfr_protection.enabled">true</parameter>
    <parameter key="framework.csfr_protection.enabled">true</parameter>
    <parameter key="framework.csfr_protection.field_name">csfr-protection</parameter>
    <parameter key="framework.profiler.enabled">true</parameter>
    <parameter key="framework.esi.enabled">true</parameter>
    <parameter key="framework.translator.fallback">en</parameter>
    <parameter key="framework.translator.locales">cs_CZ|en_US|fr_FR|de_DE|sk_SK|pl_PL|hu_HU</parameter>
    <parameter key="framework.translator.enabled">true</parameter>
    <parameter key="framework.templating.engines">twig</parameter>
    <parameter key="framework.validation.enable_annotations">true</parameter>
    <parameter key="framework.session.save_path">/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/sessions</parameter>
    <parameter key="framework.session.enabled">true</parameter>
    <parameter key="framework.session.handler_id">null</parameter>
    <parameter key="framework.session.cookie_secure">auto</parameter>
    <parameter key="framework.session.cookie_samesite">lax</parameter>
    <parameter key="framework.serializer.enabled">true</parameter>
    <parameter key="framework.serializer.enabled-annotations">true</parameter>
    <parameter key="framework.serializer.cache">serializer.mapping.cache.apc</parameter>
    <parameter key="monolog.logger.main.name">main</parameter>
    <parameter key="monolog.logger.main.type">rotating_file</parameter>
    <parameter key="monolog.logger.main.path">/var/www/jahman/workspace/mitc-project/src/SK/var/log/dev.log</parameter>
    <parameter key="monolog.logger.main.level">ERROR</parameter>
    <parameter key="monolog.logger.main.max_files">256</parameter>
    <parameter key="monolog.logger.main.handler">file</parameter>
    <parameter key="monolog.logger.console.name">console</parameter>
    <parameter key="monolog.logger.console.type">console</parameter>
    <parameter key="monolog.logger.console.level">ERROR</parameter>
    <parameter key="jms_security_extra" type="collection">
      <parameter key="secure_all_services">false</parameter>
      <parameter key="expressions">true</parameter>
    </parameter>
    <parameter key="framework.form.enabled">true</parameter>
    <parameter key="framework.form.csrf_protection.enabled">true</parameter>
    <parameter key="doctrine.dbal.default_connection">default</parameter>
    <parameter key="doctrine.dbal.connection.default.name">default</parameter>
    <parameter key="doctrine.dbal.connection.default.driver">pdo_mysql</parameter>
    <parameter key="doctrine.dbal.connection.default.dbname">INFORMATION_SCHEMA</parameter>
    <parameter key="doctrine.dbal.connection.default.host">127.0.0.1</parameter>
    <parameter key="doctrine.dbal.connection.default.port">3306</parameter>
    <parameter key="doctrine.dbal.connection.default.user">root</parameter>
    <parameter key="doctrine.dbal.connection.default.password"></parameter>
    <parameter key="doctrine.dbal.connection.default.logging">true</parameter>
    <parameter key="doctrine.dbal.connection.default.profiling">true</parameter>
    <parameter key="doctrine.dbal.connection.default.charset">UTF8</parameter>
    <parameter key="doctrine.orm.auto_mapping">true</parameter>
    <parameter key="doctrine.orm.default_entity_manager">default</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">false</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine.orm.proxy_dir">/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/Proxies</parameter>
    <parameter key="doctrine.orm.em.default.name">default</parameter>
    <parameter key="doctrine.orm.em.default.connection">default</parameter>
    <parameter key="assetic.debug">true</parameter>
    <parameter key="assetic.charset">UTF-8</parameter>
    <parameter key="assetic.use_controller">true</parameter>
    <parameter key="twig.auto_reload">true</parameter>
    <parameter key="twig.autoescape">true</parameter>
    <parameter key="twig.cache">/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/twig</parameter>
    <parameter key="twig.charset">UTF-8</parameter>
    <parameter key="twig.debug">true</parameter>
    <parameter key="twig.base_template_class">Twig_Template</parameter>
    <parameter key="twig.strict_variables">true</parameter>
    <parameter key="sk.itcbundle.api.type.default">rest</parameter>
    <parameter key="sk.itcbundle.api.version"></parameter>
    <parameter key="sk.itcbundle.google.api.key"></parameter>
    <parameter key="sk.itcbundle.raml.schema.parser.class">Raml\Parser</parameter>
    <parameter key="sk.itcbundle.assetic.content_filter.class">SK\ITCBundle\Assetic\Filter\ContentFilter</parameter>
    <parameter key="sk.itcbundle.raml.schema.writer.class">SK\ITCBundle\Service\RAML\Schema\Writer</parameter>
    <parameter key="sk.itcbundle.code.generator.class">SK\ITCBundle\Service\Code\Generator</parameter>
    <parameter key="sk.itcbundle.code.generator.rest.command.class">SK\ITCBundle\Service\Code\Generator\REST\Command</parameter>
    <parameter key="sk.itcbundle.code.generator.rest.controller.class">SK\ITCBundle\Service\Code\Generator\REST\Controller</parameter>
    <parameter key="sk.itcbundle.code.generator.rest.entity.class">SK\ITCBundle\Service\Code\Generator\REST\Entity</parameter>
    <parameter key="sk.itcbundle.code.generator.rest.form.class">SK\ITCBundle\Service\Code\Generator\REST\Form</parameter>
    <parameter key="sk.itcbundle.code.reflection.class">SK\ITCBundle\Service\Code\Reflection</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.functional.name">generator:phpunit:functional</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.functional.description">ITCloud PHPUnit Functional Case</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.functional.class">SK\ITCBundle\Command\Code\Generator\PHPUnit\Functional</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.performance.name">generator:phpunit:performance</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.performance.description">ITCloud PHPUnit Performance Case</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.performance.class">SK\ITCBundle\Command\Code\Generator\PHPUnit\Performance</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.config.name">generator:phpunit:config</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.config.description">ITCloud PHPUnit Config Case</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.config.class">SK\ITCBundle\Command\Code\Generator\PHPUnit\Config</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.equal.name">generator:phpunit:equal</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.equal.description">ITCloud PHPUnit Equal Case</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.equal.class">SK\ITCBundle\Command\Code\Generator\PHPUnit\Equal</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.run.name">generator:phpunit:run</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.run.description">ITCloud PHPUnit Run Case</parameter>
    <parameter key="sk.itcbundle.command.code.generator.phpunit.run.class">SK\ITCBundle\Command\Code\Generator\PHPUnit\Run</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.entity.name">generator:dtd:entity</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.entity.description">ITCloud DTD Entity Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.entity.class">SK\ITCBundle\Command\Code\Generator\DTD\Entity</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.attribute_list.name">generator:dtd:attlist</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.attribute_list.description">ITCloud DTD Attribute List Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.attribute_list.class">SK\ITCBundle\Command\Code\Generator\DTD\AttributeList</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.element.name">generator:dtd:element</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.element.description">ITCloud DTD Element Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.element.class">SK\ITCBundle\Command\Code\Generator\DTD\Element</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.document.name">generator:dtd:document</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.document.description">ITCloud DTD Document Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.document.class">SK\ITCBundle\Command\Code\Generator\DTD\Document</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.route.name">generator:dtd:route</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.route.description">ITCloud DTD Route Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.route.class">SK\ITCBundle\Command\Code\Generator\DTD\Route
		</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.security.name">generator:dtd:security</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.security.description">ITCloud DTD Security Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.dtd.security.class">SK\ITCBundle\Command\Code\Generator\DTD\Security</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.orm.name">generator:xsd:orm</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.orm.description">ITCloud XSD ORM Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.orm.class">SK\ITCBundle\Command\Code\Generator\XMLSchema\ORM</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.form.name">generator:xsd:form</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.form.description">ITCloud XSD Form Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.form.class">SK\ITCBundle\Command\Code\Generator\XMLSchema\Form</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.view.name">generator:xsd:view</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.view.description">ITCloud XSD View Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.view.class">SK\ITCBundle\Command\Code\Generator\XMLSchema\View</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.config.name">generator:xsd:config</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.config.description">ITCloud XSD Config Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.config.class">SK\ITCBundle\Command\Code\Generator\XMLSchema\Config</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.route.name">generator:xsd:route</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.route.description">ITCloud XSD Route Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.route.class">SK\ITCBundle\Command\Code\Generator\XMLSchema\Route</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.security.name">generator:xsd:security</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.security.description">ITCloud XSD Security Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmlschema.security.class">SK\ITCBundle\Command\Code\Generator\XMLSchema\Security</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmi.export.name">xmi:export</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmi.export.description">ITCloud XMI Export Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.xmi.export.class">SK\ITCBundle\Command\Code\Generator\XMI\Export</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.bundle.name">generator:wsdl:bundle</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.bundle.description">ITCloud WSDL Bundle Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.bundle.class">SK\ITCBundle\Command\Code\Generator\WSDL\Bundle</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.controller.name">generator:wsdl:controller</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.controller.description">ITCloud WSDL Controller Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.controller.class">SK\ITCBundle\Command\Code\Generator\WSDL\Controller</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.orm.name">generator:wsdl:orm</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.orm.description">ITCloud WSDL ORM Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.orm.class">SK\ITCBundle\Command\Code\Generator\WSDL\ORM
		</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.form.name">generator:wsdl:form</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.form.description">ITCloud WSDL Form Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.form.class">SK\ITCBundle\Command\Code\Generator\WSDL\Form
		</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.client.name">generator:wsdl:client</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.client.description">ITCloud WSDL Client Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.client.class">SK\ITCBundle\Command\Code\Generator\WSDL\Client</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.server.name">generator:wsdl:server</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.server.description">ITCloud WSDL Server Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.server.class">SK\ITCBundle\Command\Code\Generator\WSDL\Server</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.routing.name">generator:wsdl:route</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.routing.description">ITCloud WSDL Routes Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.routing.class">SK\ITCBundle\Command\Code\Generator\WSDL\Route</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.config.name">generator:wsdl:config</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.config.description">ITCloud WSDL Conifg Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.config.class">SK\ITCBundle\Command\Code\Generator\WSDL\Config</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.view.name">generator:wsdl:view</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.view.description">ITCloud WSDL Views Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.view.class">SK\ITCBundle\Command\Code\Generator\WSDL\View
		</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.route.name">generator:wsdl:route</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.route.description">ITCloud WSDL Route Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.route.class">SK\ITCBundle\Command\Code\Generator\WSDL\Route</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.security.name">generator:wsdl:security</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.security.description">ITCloud WSDL Security Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.security.class">SK\ITCBundle\Command\Code\Generator\WSDL\Security</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.parameter.name">generator:wsdl:parameter</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.parameter.description">ITCloud WSDL Parameter Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.wsdl.parameter.class">SK\ITCBundle\Command\Code\Generator\WSDL\Parameter</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.file.name">doc:file</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.file.description">ITCloud Doc Block File Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.file.class">SK\ITCBundle\Command\Code\Generator\DocBlock\FileCommand</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.package.name">doc:package</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.package.description">ITCloud Doc Block Package Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.package.class">SK\ITCBundle\Command\Code\Generator\DocBlock\PackageCommand</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.class.name">doc:class</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.class.description">ITCloud Doc Block Class Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.class.class">SK\ITCBundle\Command\Code\Generator\DocBlock\ClassCommand</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.attribute.name">doc:attribute</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.attribute.description">ITCloud Doc Block Class Attribute Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.attribute.class">SK\ITCBundle\Command\Code\Generator\DocBlock\AttributeCommand</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.operation.name">doc:operations</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.operation.description">ITCloud Doc Block Class Operation Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.operation.class">SK\ITCBundle\Command\Code\Generator\DocBlock\OperationCommand</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.parameter.name">doc:parameter</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.parameter.description">ITCloud Doc Block Class Operation Parameter Generator</parameter>
    <parameter key="sk.itcbundle.command.code.generator.docblock.parameter.class">SK\ITCBundle\Command\Code\Generator\DocBlock\ParameterCommand</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.file.name">uml:file</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.file.description">ITCloud UML Classes Files</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.file.class">SK\ITCBundle\Command\Code\Reflection\FileCommand</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.package.name">uml:package</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.package.description">ITCloud UML Classes Namespaces</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.package.class">SK\ITCBundle\Command\Code\Reflection\PackageCommand</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.class.name">uml:class</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.class.description">ITCloud UML Classes</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.class.class">SK\ITCBundle\Command\Code\Reflection\ClassCommand</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.attribute.name">uml:attribute</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.attribute.description">ITCloud UML Classes Attributes</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.attribute.class">SK\ITCBundle\Command\Code\Reflection\AttributeCommand</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.operation.name">uml:operation</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.operation.description">ITCloud UML Classes Operations</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.operation.class">SK\ITCBundle\Command\Code\Reflection\OperationCommand</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.parameter.name">uml:parameter</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.parameter.description">ITCloud UML Classes Parameters</parameter>
    <parameter key="sk.itcbundle.command.code.reflection.parameter.class">SK\ITCBundle\Command\Code\Reflection\ParameterCommand</parameter>
    <parameter key="sk.itcbundle.command.mylyn.report.name">mylyn:report</parameter>
    <parameter key="sk.itcbundle.command.mylyn.report.description">ITCloud Mylyn Report Repository</parameter>
    <parameter key="sk.itcbundle.command.mylyn.report.class">SK\ITCBundle\Command\Mylyn\ReportCommand</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.command.name">rest:command</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.command.description">ITCloud REST Generator Command</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.command.class">SK\ITCBundle\Command\Code\Generator\REST\CommandCommand</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.controller.name">rest:controller</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.controller.description">ITCloud REST Generator Controller</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.controller.class">SK\ITCBundle\Command\Code\Generator\REST\ControllerCommand</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.entity.name">rest:entity</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.entity.description">ITCloud REST Generator Entity</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.entity.class">SK\ITCBundle\Command\Code\Generator\REST\EntityCommand</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.form.name">rest:form</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.form.description">ITCloud REST Generator Form</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.form.class">SK\ITCBundle\Command\Code\Generator\REST\FormCommand</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.service.name">rest:service</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.service.description">ITCloud REST Generator Service</parameter>
    <parameter key="sk.itcbundle.command.code.generator.rest.service.class">SK\ITCBundle\Command\Code\Generator\REST\ServiceCommand</parameter>
    <parameter key="sk.itcbundle.google.translator.class">SK\ITCBundle\Service\Google\Translator</parameter>
    <parameter key="sk.itcbundle.google.spreadsheet.class">SK\ITCBundle\Service\Google\Spreadsheet</parameter>
    <parameter key="sk.itcbundle.excel.class">SK\ITCBundle\Service\Excel</parameter>
    <parameter key="sk.itcbundle.menu.builder.class">SK\ITCBundle\Menu\Builder</parameter>
    <parameter key="sk.itcbundle.code.generator.phpunit.functional.class">SK\ITCBundle\Service\Code\Generator\PHPUnit\Functional</parameter>
    <parameter key="sk.itcbundle.code.generator.phpunit.performance.class">SK\ITCBundle\Service\Code\Generator\PHPUnit\Performance</parameter>
    <parameter key="sk.itcbundle.code.generator.phpunit.config.class">SK\ITCBundle\Service\Code\Generator\PHPUnit\Config</parameter>
    <parameter key="sk.itcbundle.code.generator.phpunit.equal.class">SK\ITCBundle\Service\Code\Generator\PHPUnit\Equal</parameter>
    <parameter key="sk.itcbundle.code.generator.phpunit.run.class">SK\ITCBundle\Service\Code\Generator\PHPUnit\Run</parameter>
    <parameter key="sk.itcbundle.code.generator.xmlschema.orm.class">SK\ITCBundle\Service\Code\Generator\XMLSchema\ORM
		</parameter>
    <parameter key="sk.itcbundle.code.generator.xmlschema.form.class">SK\ITCBundle\Service\Code\Generator\XMLSchema\Form
		</parameter>
    <parameter key="sk.itcbundle.code.generator.xmlschema.view.class">SK\ITCBundle\Service\Code\Generator\XMLSchema\View
		</parameter>
    <parameter key="sk.itcbundle.code.generator.xmlschema.config.class">SK\ITCBundle\Service\Code\Generator\XMLSchema\Config
		</parameter>
    <parameter key="sk.itcbundle.code.generator.xmlschema.route.class">SK\ITCBundle\Service\Code\Generator\XMLSchema\Route
		</parameter>
    <parameter key="sk.itcbundle.code.generator.xmlschema.security.class">SK\ITCBundle\Service\Code\Generator\XMLSchema\Security</parameter>
    <parameter key="sk.itcbundle.code.generator.dtd.entity.class">SK\ITCBundle\Service\Code\Generator\DTD\Entity</parameter>
    <parameter key="sk.itcbundle.code.generator.dtd.attribute_list.class">SK\ITCBundle\Service\Code\Generator\DTD\AttributeList</parameter>
    <parameter key="sk.itcbundle.code.generator.dtd.element.class">SK\ITCBundle\Service\Code\Generator\DTD\Element</parameter>
    <parameter key="sk.itcbundle.code.generator.dtd.document.class">SK\ITCBundle\Service\Code\Generator\DTD\Document</parameter>
    <parameter key="sk.itcbundle.code.generator.dtd.route.class">SK\ITCBundle\Service\Code\Generator\DTD\Route</parameter>
    <parameter key="sk.itcbundle.code.generator.dtd.security.class">SK\ITCBundle\Service\Code\Generator\DTD\Security</parameter>
    <parameter key="sk.itcbundle.code.generator.xmi.export.class">SK\ITCBundle\Service\Code\Generator\XMI\Export</parameter>
    <parameter key="sk.itcbundle.translation.translator.class">SK\ITCBundle\Service\Translation\Translator</parameter>
    <parameter key="sk.itcbundle.code.generator.wsdl.bundle.class">SK\ITCBundle\Service\Code\Generator\WSDL\Bundle</parameter>
    <parameter key="sk.itcbundle.code.generator.wsdl.controller.class">SK\ITCBundle\Service\Code\Generator\WSDL\Controller</parameter>
    <parameter key="sk.itcbundle.code.generator.wsdl.orm.class">SK\ITCBundle\Service\Code\Generator\WSDL\ORM</parameter>
    <parameter key="sk.itcbundle.code.generator.wsdl.form.class">SK\ITCBundle\Service\Code\Generator\WSDL\Form</parameter>
    <parameter key="sk.itcbundle.code.generator.wsdl.client.class">SK\ITCBundle\Service\Code\Generator\WSDL\Client</parameter>
    <parameter key="sk.itcbundle.code.generator.wsdl.server.class">SK\ITCBundle\Service\Code\Generator\WSDL\Server</parameter>
    <parameter key="sk.itcbundle.code.generator.wsdl.routing.class">SK\ITCBundle\Service\Code\Generator\WSDL\Route</parameter>
    <parameter key="sk.itcbundle.code.generator.wsdl.config.class">SK\ITCBundle\Service\Code\Generator\WSDL\Config</parameter>
    <parameter key="sk.itcbundle.code.generator.wsdl.route.class">SK\ITCBundle\Service\Code\Generator\WSDL\Route</parameter>
    <parameter key="sk.itcbundle.code.generator.wsdl.security.class">SK\ITCBundle\Service\Code\Generator\WSDL\Security</parameter>
    <parameter key="sk.itcbundle.code.generator.wsdl.view.class">SK\ITCBundle\Service\Code\Generator\WSDL\View</parameter>
    <parameter key="sk.itcbundle.code.generator.wsdl.parameter.class">SK\ITCBundle\Service\Code\Generator\WSDL\Parameter</parameter>
    <parameter key="sk.itcbundle.os.command.class">SK\ITCBundle\Service\OS\Command</parameter>
    <parameter key="sk.itcbundle.command.os.shellcommand.class">SK\ITCBundle\Command\OS\ShellCommand</parameter>
    <parameter key="sk.itcbundle.command.os.name.name">os:info</parameter>
    <parameter key="sk.itcbundle.command.os.name.description">ITCloud OS Info</parameter>
    <parameter key="sk.itcbundle.command.os.name.class">SK\ITCBundle\Command\OS\ShellCommand </parameter>
    <parameter key="sk.itcbundle.command.os.release.name">os:release</parameter>
    <parameter key="sk.itcbundle.command.os.release.description">ITCloud OS Release</parameter>
    <parameter key="sk.itcbundle.command.os.release.class">SK\ITCBundle\Command\OS\ShellCommand </parameter>
    <parameter key="sk.itcbundle.google.drive.class">SK\ITCBundle\Service\Google\Drive</parameter>
    <parameter key="sk.itcbundle.google.spreadsheet.provider.class">Google\Spreadsheet\DefaultServiceRequest</parameter>
    <parameter key="sk.itcbundle.google.spreadsheet.factory.class">Google\Spreadsheet\ServiceRequestFactory</parameter>
    <parameter key="sk.itcbundle.google.api.client.class">Google_Client</parameter>
    <parameter key="sk.itcbundle.command.google.translator.name">google:trans</parameter>
    <parameter key="sk.itcbundle.command.google.translator.description">ITCloud Google Trans</parameter>
    <parameter key="sk.itcbundle.command.google.translator.class">SK\ITCBundle\Command\Google\Translator</parameter>
    <parameter key="sk.itcbundle.command.google.drive.name">google:drive</parameter>
    <parameter key="sk.itcbundle.command.google.drive.description">ITCloud Google Drive</parameter>
    <parameter key="sk.itcbundle.command.google.drive.class">SK\ITCBundle\Command\Google\Drive</parameter>
    <parameter key="sk.itcbundle.command.google.spreadsheet.name">google:spreadsheet</parameter>
    <parameter key="sk.itcbundle.command.google.spreadsheet.description">ITCloud Google Spreadsheet</parameter>
    <parameter key="sk.itcbundle.command.google.spreadsheet.class">SK\ITCBundle\Command\Google\Spreadsheet</parameter>
    <parameter key="google.application.name">ITCloud</parameter>
    <parameter key="google.application.configFile">ITCloud</parameter>
    <parameter key="google.application.offline">offline</parameter>
    <parameter key="sk.itcbundle.table.class">SK\ITCBundle\Service\Table\Table</parameter>
    <parameter key="sk.itcbundle.table.maxColWidth">120</parameter>
    <parameter key="fragment.renderer.hinclude.global_template"></parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/SK_ITCBundle_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.sk.itcbundle.command.code.generator.docblock.file</parameter>
      <parameter>console.command.public_alias.sk.itcbundle.command.code.generator.docblock.package</parameter>
      <parameter>console.command.public_alias.sk.itcbundle.command.code.generator.docblock.class</parameter>
      <parameter>console.command.public_alias.sk.itcbundle.command.code.generator.docblock.attribute</parameter>
      <parameter>console.command.public_alias.sk.itcbundle.command.code.generator.docblock.operation</parameter>
      <parameter>console.command.public_alias.sk.itcbundle.command.code.generator.docblock.parameter</parameter>
      <parameter>console.command.public_alias.sk.itcbundle.command.code.reflection.file</parameter>
      <parameter>console.command.public_alias.sk.itcbundle.command.code.reflection.package</parameter>
      <parameter>console.command.public_alias.sk.itcbundle.command.code.reflection.class</parameter>
      <parameter>console.command.public_alias.sk.itcbundle.command.code.reflection.attribute</parameter>
      <parameter>console.command.public_alias.sk.itcbundle.command.code.reflection.operation</parameter>
      <parameter>console.command.public_alias.sk.itcbundle.command.code.reflection.parameter</parameter>
      <parameter>console.command.public_alias.sk.itcbundle.command.os.release</parameter>
      <parameter>console.command.public_alias.sk.itcbundle.command.os.name</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="SK\ITCBundle\Kernel" public="true" synthetic="true">
      <tag name="routing.route_loader"/>
    </service>
    <service id="sk.itcbundle.table" class="SK\ITCBundle\Service\Table\Table" public="false" autowire="true">
      <argument type="service" id="logger"/>
      <argument>120</argument>
    </service>
    <service id="sk.itcbundle.raml.schema.parser" class="Raml\Parser" public="false" autowire="true"/>
    <service id="sk.itcbundle.raml.schema.writer" class="SK\ITCBundle\Service\RAML\Schema\Writer" public="false" autowire="true">
      <argument type="service" id="logger"/>
      <argument type="service" id="serializer"/>
    </service>
    <service id="sk.itcbundle.assetic.content_filter" class="SK\ITCBundle\Assetic\Filter\ContentFilter" public="false" autowire="true">
      <tag name="assetic.filter" alias="content"/>
    </service>
    <service id="sk.itcbundle.code.generator" class="SK\ITCBundle\Service\Code\Generator" public="false" autowire="true">
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
    </service>
    <service id="sk.itcbundle.code.generator.rest.command" class="SK\ITCBundle\Service\Code\Generator\REST\Command" public="false" autowire="true">
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
    </service>
    <service id="sk.itcbundle.code.generator.rest.controller" class="SK\ITCBundle\Service\Code\Generator\REST\Controller" public="false" autowire="true">
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
    </service>
    <service id="sk.itcbundle.code.generator.rest.entity" class="SK\ITCBundle\Service\Code\Generator\REST\Entity" public="false" autowire="true">
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
    </service>
    <service id="sk.itcbundle.code.generator.rest.form" class="SK\ITCBundle\Service\Code\Generator\REST\Form" public="false" autowire="true">
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
    </service>
    <service id="sk.itcbundle.code.reflection" class="SK\ITCBundle\Service\Code\Reflection" public="false" autowire="true">
      <argument type="service" id="logger"/>
    </service>
    <service id="sk.itcbundle.command.code.generator.docblock.file" class="SK\ITCBundle\Command\Code\Generator\DocBlock\FileCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>doc:file</argument>
      <argument>ITCloud Doc Block File Generator</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
      <argument type="service" id="sk.itcbundle.code.generator"/>
    </service>
    <service id="sk.itcbundle.command.code.generator.docblock.package" class="SK\ITCBundle\Command\Code\Generator\DocBlock\PackageCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>doc:package</argument>
      <argument>ITCloud Doc Block Package Generator</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
      <argument type="service" id="sk.itcbundle.code.generator"/>
    </service>
    <service id="sk.itcbundle.command.code.generator.docblock.class" class="SK\ITCBundle\Command\Code\Generator\DocBlock\ClassCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>doc:class</argument>
      <argument>ITCloud Doc Block Class Generator</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
      <argument type="service" id="sk.itcbundle.code.generator"/>
    </service>
    <service id="sk.itcbundle.command.code.generator.docblock.attribute" class="SK\ITCBundle\Command\Code\Generator\DocBlock\AttributeCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>doc:attribute</argument>
      <argument>ITCloud Doc Block Class Attribute Generator</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
      <argument type="service" id="sk.itcbundle.code.generator"/>
    </service>
    <service id="sk.itcbundle.command.code.generator.docblock.operation" class="SK\ITCBundle\Command\Code\Generator\DocBlock\OperationCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>doc:operations</argument>
      <argument>ITCloud Doc Block Class Operation Generator</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
      <argument type="service" id="sk.itcbundle.code.generator"/>
    </service>
    <service id="sk.itcbundle.command.code.generator.docblock.parameter" class="SK\ITCBundle\Command\Code\Generator\DocBlock\ParameterCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>doc:parameter</argument>
      <argument>ITCloud Doc Block Class Operation Parameter Generator</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
      <argument type="service" id="sk.itcbundle.code.generator"/>
    </service>
    <service id="sk.itcbundle.command.code.reflection.file" class="SK\ITCBundle\Command\Code\Reflection\FileCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>uml:file</argument>
      <argument>ITCloud UML Classes Files</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
    </service>
    <service id="sk.itcbundle.command.code.reflection.package" class="SK\ITCBundle\Command\Code\Reflection\PackageCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>uml:package</argument>
      <argument>ITCloud UML Classes Namespaces</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
    </service>
    <service id="sk.itcbundle.command.code.reflection.class" class="SK\ITCBundle\Command\Code\Reflection\ClassCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>uml:class</argument>
      <argument>ITCloud UML Classes</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
    </service>
    <service id="sk.itcbundle.command.code.reflection.attribute" class="SK\ITCBundle\Command\Code\Reflection\AttributeCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>uml:attribute</argument>
      <argument>ITCloud UML Classes Attributes</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
    </service>
    <service id="sk.itcbundle.command.code.reflection.operation" class="SK\ITCBundle\Command\Code\Reflection\OperationCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>uml:operation</argument>
      <argument>ITCloud UML Classes Operations</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
    </service>
    <service id="sk.itcbundle.command.code.reflection.parameter" class="SK\ITCBundle\Command\Code\Reflection\ParameterCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>uml:parameter</argument>
      <argument>ITCloud UML Classes Parameters</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.code.reflection"/>
    </service>
    <service id="sk.itcbundle.google.translator" class="SK\ITCBundle\Service\Google\Translator" public="false" autowire="true"/>
    <service id="sk.itcbundle.google.spreadsheet" class="SK\ITCBundle\Service\Google\Spreadsheet" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.phpunit.functional" class="SK\ITCBundle\Service\Code\Generator\PHPUnit\Functional" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.phpunit.performance" class="SK\ITCBundle\Service\Code\Generator\PHPUnit\Performance" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.phpunit.run" class="SK\ITCBundle\Service\Code\Generator\PHPUnit\Run" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.phpunit.config" class="SK\ITCBundle\Service\Code\Generator\PHPUnit\Config" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.phpunit.equal" class="SK\ITCBundle\Service\Code\Generator\PHPUnit\Equal" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.xmlschema.orm" class="SK\ITCBundle\Service\Code\Generator\XMLSchema\ORM&#10;&#9;&#9;" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.xmlschema.form" class="SK\ITCBundle\Service\Code\Generator\XMLSchema\Form&#10;&#9;&#9;" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.xmlschema.view" class="SK\ITCBundle\Service\Code\Generator\XMLSchema\View&#10;&#9;&#9;" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.xmlschema.config" class="SK\ITCBundle\Service\Code\Generator\XMLSchema\Config&#10;&#9;&#9;" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.xmlschema.route" class="SK\ITCBundle\Service\Code\Generator\XMLSchema\Route&#10;&#9;&#9;" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.xmlschema.security" class="SK\ITCBundle\Service\Code\Generator\XMLSchema\Security" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.dtd.document" class="SK\ITCBundle\Service\Code\Generator\DTD\Document" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.dtd.entity" class="SK\ITCBundle\Service\Code\Generator\DTD\Entity" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.dtd.attribute_list" class="SK\ITCBundle\Service\Code\Generator\DTD\AttributeList" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.dtd.element" class="SK\ITCBundle\Service\Code\Generator\DTD\Element" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.dtd.route" class="SK\ITCBundle\Service\Code\Generator\DTD\Route" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.dtd.security" class="SK\ITCBundle\Service\Code\Generator\DTD\Security" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.xmi.export" class="SK\ITCBundle\Service\Code\Generator\XMI\Export" public="false" autowire="true"/>
    <service id="sk.itcbundle.translation.translator" class="SK\ITCBundle\Service\Translation\Translator" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.wsdl.bundle" class="SK\ITCBundle\Service\Code\Generator\WSDL\Bundle" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.wsdl.controller" class="SK\ITCBundle\Service\Code\Generator\WSDL\Controller" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.wsdl.orm" class="SK\ITCBundle\Service\Code\Generator\WSDL\ORM" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.wsdl.form" class="SK\ITCBundle\Service\Code\Generator\WSDL\Form" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.wsdl.client" class="SK\ITCBundle\Service\Code\Generator\WSDL\Client" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.wsdl.server" class="SK\ITCBundle\Service\Code\Generator\WSDL\Server" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.wsdl.route" class="SK\ITCBundle\Service\Code\Generator\WSDL\Route" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.wsdl.service" class="SK\ITCBundle\Service\Code\Generator\WSDL\Config" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.wsdl.parameters" class="SK\ITCBundle\Service\Code\Generator\WSDL\View" public="false" autowire="true"/>
    <service id="sk.itcbundle.code.generator.wsdl.security" class="SK\ITCBundle\Service\Code\Generator\WSDL\Security" public="false" autowire="true"/>
    <service id="sk.itcbundle.os.command.uname" class="SK\ITCBundle\Service\OS\Command" public="false" autowire="true">
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument>uname</argument>
      <argument type="collection">
        <argument>-a</argument>
      </argument>
    </service>
    <service id="sk.itcbundle.os.command.lsb_release" class="SK\ITCBundle\Service\OS\Command" public="false" autowire="true">
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument>lsb_release</argument>
      <argument type="collection">
        <argument>-a</argument>
      </argument>
    </service>
    <service id="sk.itcbundle.os.command" class="SK\ITCBundle\Service\OS\Command" public="false" autowire="true">
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument>uname</argument>
      <argument type="collection">
        <argument>-a</argument>
      </argument>
    </service>
    <service id="sk.itcbundle.command.os.release" class="SK\ITCBundle\Command\OS\ShellCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>os:release</argument>
      <argument>ITCloud OS Release</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.os.command.lsb_release"/>
    </service>
    <service id="sk.itcbundle.command.os.name" class="SK\ITCBundle\Command\OS\ShellCommand" public="false" autowire="true">
      <tag name="console.command"/>
      <argument>os:info</argument>
      <argument>ITCloud OS Info</argument>
      <argument type="service" id="logger"/>
      <argument type="service" id="sk.itcbundle.table"/>
      <argument type="service" id="sk.itcbundle.os.command.uname"/>
    </service>
    <service id="controller_resolver" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="argument_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="argument_resolver.request_attribute"/>
        <argument type="service" id="argument_resolver.request"/>
        <argument type="service" id="argument_resolver.session"/>
        <argument type="service" id="argument_resolver.service"/>
        <argument type="service" id="argument_resolver.default"/>
        <argument type="service" id="argument_resolver.variadic"/>
      </argument>
    </service>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="100"/>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id=".service_locator.I3K77mT"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-100"/>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-150"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.html"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="event_dispatcher" class="Symfony\Component\EventDispatcher\EventDispatcher" public="true">
      <tag name="container.hot_path"/>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="maker.console_error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="maker.console_error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="event_dispatcher"/>
      <argument type="service" id="controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/SK_ITCBundle_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>ITC IS REALLY SECURE Bundle!</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.messenger.restart_workers_signal" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.wnlveDj"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor" public="false">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="stdClass"/>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator._cmka45"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id=".2_~sShQEKT" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
    </service>
    <service id=".1_~sShQEKT" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service" id=".1_~sShQEKT"/>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK</argument>
      <argument type="service" id=".2_~sShQEKT"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand" public="false">
      <tag name="console.command" command="cache:pool:list"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand" public="false">
      <tag name="console.command" command="lint:container"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand" public="false">
      <tag name="console.command" command="secrets:set"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand" public="false">
      <tag name="console.command" command="secrets:remove"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand" public="false">
      <tag name="console.command" command="secrets:generate-keys"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand" public="false">
      <tag name="console.command" command="secrets:list"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand" public="false">
      <tag name="console.command" command="secrets:decrypt-to-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand" public="false">
      <tag name="console.command" command="secrets:encrypt-from-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>ELFwklxJfz</argument>
      <argument>0</argument>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>isyoyCTIYe</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>gMv-iQejo0</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>xdkTQxWIRv</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>quxiRCx8iK</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>JIL-+PiQyV</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.messenger.restart_workers_signal" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>QKax4Q2JvW</argument>
      <argument>0</argument>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller" public="false">
      <argument>null</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".1_NativeFileSessionHandler~UDD2a75" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
      <argument type="service" id="session.attribute_bag"/>
      <argument type="service" id="session.flash_bag"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~UDD2a75"/>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler" public="false">
      <argument></argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.f1ancQ8"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.dI_e9_Q"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.YrZrpzt.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/jahman/workspace/mitc-project/src/SK/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.m90YCjy.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument>null</argument>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/config/secrets/dev</argument>
      <argument>%env(base64:default::SYMFONY_DECRYPTION_SECRET)%</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/var/www/jahman/workspace/mitc-project/src/SK/.env.local</argument>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes" public="false">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="maker.file_manager" class="Symfony\Bundle\MakerBundle\FileManager" public="false">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="maker.autoloader_util"/>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK</argument>
      <argument>null</argument>
    </service>
    <service id="maker.autoloader_finder" class="Symfony\Bundle\MakerBundle\Util\ComposerAutoloaderFinder" public="false">
      <argument>App</argument>
    </service>
    <service id="maker.autoloader_util" class="Symfony\Bundle\MakerBundle\Util\AutoloaderUtil" public="false">
      <argument type="service" id="maker.autoloader_finder"/>
    </service>
    <service id="maker.event_registry" class="Symfony\Bundle\MakerBundle\EventRegistry" public="false">
      <argument type="service" id="event_dispatcher"/>
    </service>
    <service id="maker.console_error_listener" class="Symfony\Bundle\MakerBundle\Event\ConsoleErrorSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="maker.doctrine_helper" class="Symfony\Bundle\MakerBundle\Doctrine\DoctrineHelper" public="false">
      <argument>App\Entity</argument>
      <argument>null</argument>
    </service>
    <service id="maker.auto_command.abstract" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false" abstract="true">
      <argument></argument>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.generator" class="Symfony\Bundle\MakerBundle\Generator" public="false">
      <argument type="service" id="maker.file_manager"/>
      <argument>App</argument>
    </service>
    <service id="maker.entity_class_generator" class="Symfony\Bundle\MakerBundle\Doctrine\EntityClassGenerator" public="false">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.user_class_builder" class="Symfony\Bundle\MakerBundle\Security\UserClassBuilder" public="false"/>
    <service id="maker.security_config_updater" class="Symfony\Bundle\MakerBundle\Security\SecurityConfigUpdater" public="false"/>
    <service id="maker.renderer.form_type_renderer" class="Symfony\Bundle\MakerBundle\Renderer\FormTypeRenderer" public="false">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.maker.make_authenticator" class="Symfony\Bundle\MakerBundle\Maker\MakeAuthenticator" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.maker.make_command" class="Symfony\Bundle\MakerBundle\Maker\MakeCommand" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeController" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_crud" class="Symfony\Bundle\MakerBundle\Maker\MakeCrud" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_entity" class="Symfony\Bundle\MakerBundle\Maker\MakeEntity" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK</argument>
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.maker.make_fixtures" class="Symfony\Bundle\MakerBundle\Maker\MakeFixtures" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form" class="Symfony\Bundle\MakerBundle\Maker\MakeForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_functional_test" class="Symfony\Bundle\MakerBundle\Maker\MakeFunctionalTest" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_registration_form" class="Symfony\Bundle\MakerBundle\Maker\MakeRegistrationForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="maker.maker.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerEncoder" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerNormalizer" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_subscriber" class="Symfony\Bundle\MakerBundle\Maker\MakeSubscriber" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.event_registry"/>
    </service>
    <service id="maker.maker.make_twig_extension" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigExtension" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_unit_test" class="Symfony\Bundle\MakerBundle\Maker\MakeUnitTest" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_validator" class="Symfony\Bundle\MakerBundle\Maker\MakeValidator" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_voter" class="Symfony\Bundle\MakerBundle\Maker\MakeVoter" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_user" class="Symfony\Bundle\MakerBundle\Maker\MakeUser" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.user_class_builder"/>
      <argument type="service" id="maker.security_config_updater"/>
    </service>
    <service id="maker.maker.make_migration" class="Symfony\Bundle\MakerBundle\Maker\MakeMigration" public="false">
      <tag name="maker.command"/>
      <argument>/var/www/jahman/workspace/mitc-project/src/SK</argument>
    </service>
    <service id=".service_locator.CmORmuK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service" id="container.env_var_processor"/>
        <argument key="bool" type="service" id="container.env_var_processor"/>
        <argument key="const" type="service" id="container.env_var_processor"/>
        <argument key="csv" type="service" id="container.env_var_processor"/>
        <argument key="default" type="service" id="container.env_var_processor"/>
        <argument key="file" type="service" id="container.env_var_processor"/>
        <argument key="float" type="service" id="container.env_var_processor"/>
        <argument key="int" type="service" id="container.env_var_processor"/>
        <argument key="json" type="service" id="container.env_var_processor"/>
        <argument key="key" type="service" id="container.env_var_processor"/>
        <argument key="query_string" type="service" id="container.env_var_processor"/>
        <argument key="require" type="service" id="container.env_var_processor"/>
        <argument key="resolve" type="service" id="container.env_var_processor"/>
        <argument key="string" type="service" id="container.env_var_processor"/>
        <argument key="trim" type="service" id="container.env_var_processor"/>
        <argument key="url" type="service" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id="maker.auto_command.make_auth" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:auth"/>
      <argument type="service" id="maker.maker.make_authenticator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:auth</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_command" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:command"/>
      <argument type="service" id="maker.maker.make_command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:command</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:controller"/>
      <argument type="service" id="maker.maker.make_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:controller</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_crud" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:crud"/>
      <argument type="service" id="maker.maker.make_crud"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:crud</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_entity" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:entity"/>
      <argument type="service" id="maker.maker.make_entity"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:entity</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_fixtures" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:fixtures"/>
      <argument type="service" id="maker.maker.make_fixtures"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:fixtures</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:form"/>
      <argument type="service" id="maker.maker.make_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_functional_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:functional-test"/>
      <argument type="service" id="maker.maker.make_functional_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:functional-test</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_registration_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:registration-form"/>
      <argument type="service" id="maker.maker.make_registration_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:registration-form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:encoder"/>
      <argument type="service" id="maker.maker.make_serializer_encoder"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:encoder</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:normalizer"/>
      <argument type="service" id="maker.maker.make_serializer_normalizer"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:normalizer</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_subscriber" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:subscriber"/>
      <argument type="service" id="maker.maker.make_subscriber"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:subscriber</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_extension" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:twig-extension"/>
      <argument type="service" id="maker.maker.make_twig_extension"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:twig-extension</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_unit_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:unit-test"/>
      <argument type="service" id="maker.maker.make_unit_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:unit-test</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_validator" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:validator"/>
      <argument type="service" id="maker.maker.make_validator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:validator</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_voter" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:voter"/>
      <argument type="service" id="maker.maker.make_voter"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:voter</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_user" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:user"/>
      <argument type="service" id="maker.maker.make_user"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:user</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_migration" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:migration"/>
      <argument type="service" id="maker.maker.make_migration"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:migration</argument>
      </call>
    </service>
    <service id=".service_locator.I3K77mT" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator._cmka45" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="logger" class="Symfony\Component\HttpKernel\Log\Logger" public="false"/>
    <service id=".service_locator.YrZrpzt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.YrZrpzt.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YrZrpzt" method="withContext"/>
    </service>
    <service id=".service_locator.m90YCjy" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.m90YCjy.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.m90YCjy" method="withContext"/>
    </service>
    <service id=".service_locator.wnlveDj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.f1ancQ8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.dI_e9_Q" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id=".service_locator.e5_vmRJ"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="make:auth">maker.auto_command.make_auth</argument>
        <argument key="make:command">maker.auto_command.make_command</argument>
        <argument key="make:controller">maker.auto_command.make_controller</argument>
        <argument key="make:crud">maker.auto_command.make_crud</argument>
        <argument key="make:entity">maker.auto_command.make_entity</argument>
        <argument key="make:fixtures">maker.auto_command.make_fixtures</argument>
        <argument key="make:form">maker.auto_command.make_form</argument>
        <argument key="make:functional-test">maker.auto_command.make_functional_test</argument>
        <argument key="make:registration-form">maker.auto_command.make_registration_form</argument>
        <argument key="make:serializer:encoder">maker.auto_command.make_serializer_encoder</argument>
        <argument key="make:serializer:normalizer">maker.auto_command.make_serializer_normalizer</argument>
        <argument key="make:subscriber">maker.auto_command.make_subscriber</argument>
        <argument key="make:twig-extension">maker.auto_command.make_twig_extension</argument>
        <argument key="make:unit-test">maker.auto_command.make_unit_test</argument>
        <argument key="make:validator">maker.auto_command.make_validator</argument>
        <argument key="make:voter">maker.auto_command.make_voter</argument>
        <argument key="make:user">maker.auto_command.make_user</argument>
        <argument key="make:migration">maker.auto_command.make_migration</argument>
      </argument>
    </service>
    <service id=".service_locator.e5_vmRJ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_list" type="service" id="console.command.cache_pool_list"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.container_lint" type="service" id="console.command.container_lint"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service" id="console.command.secrets_decrypt_to_local"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service" id="console.command.secrets_encrypt_from_local"/>
        <argument key="console.command.secrets_generate_key" type="service" id="console.command.secrets_generate_key"/>
        <argument key="console.command.secrets_list" type="service" id="console.command.secrets_list"/>
        <argument key="console.command.secrets_remove" type="service" id="console.command.secrets_remove"/>
        <argument key="console.command.secrets_set" type="service" id="console.command.secrets_set"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="maker.auto_command.make_auth" type="service" id="maker.auto_command.make_auth"/>
        <argument key="maker.auto_command.make_command" type="service" id="maker.auto_command.make_command"/>
        <argument key="maker.auto_command.make_controller" type="service" id="maker.auto_command.make_controller"/>
        <argument key="maker.auto_command.make_crud" type="service" id="maker.auto_command.make_crud"/>
        <argument key="maker.auto_command.make_entity" type="service" id="maker.auto_command.make_entity"/>
        <argument key="maker.auto_command.make_fixtures" type="service" id="maker.auto_command.make_fixtures"/>
        <argument key="maker.auto_command.make_form" type="service" id="maker.auto_command.make_form"/>
        <argument key="maker.auto_command.make_functional_test" type="service" id="maker.auto_command.make_functional_test"/>
        <argument key="maker.auto_command.make_migration" type="service" id="maker.auto_command.make_migration"/>
        <argument key="maker.auto_command.make_registration_form" type="service" id="maker.auto_command.make_registration_form"/>
        <argument key="maker.auto_command.make_serializer_encoder" type="service" id="maker.auto_command.make_serializer_encoder"/>
        <argument key="maker.auto_command.make_serializer_normalizer" type="service" id="maker.auto_command.make_serializer_normalizer"/>
        <argument key="maker.auto_command.make_subscriber" type="service" id="maker.auto_command.make_subscriber"/>
        <argument key="maker.auto_command.make_twig_extension" type="service" id="maker.auto_command.make_twig_extension"/>
        <argument key="maker.auto_command.make_unit_test" type="service" id="maker.auto_command.make_unit_test"/>
        <argument key="maker.auto_command.make_user" type="service" id="maker.auto_command.make_user"/>
        <argument key="maker.auto_command.make_validator" type="service" id="maker.auto_command.make_validator"/>
        <argument key="maker.auto_command.make_voter" type="service" id="maker.auto_command.make_voter"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="event_dispatcher" public="false"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container" public="false"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger" public="false"/>
    <service id="error_renderer.html" alias="error_handler.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.html"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="event_dispatcher"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler.native_file" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="session.handler" alias="session.handler.native_file"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.CmORmuK" public="true"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.I3K77mT"/>
    <service id="Psr\Log\LoggerInterface" alias="logger" public="false"/>
    <service id="console.command.public_alias.sk.itcbundle.command.code.generator.docblock.file" alias="sk.itcbundle.command.code.generator.docblock.file" public="true"/>
    <service id="console.command.public_alias.sk.itcbundle.command.code.generator.docblock.package" alias="sk.itcbundle.command.code.generator.docblock.package" public="true"/>
    <service id="console.command.public_alias.sk.itcbundle.command.code.generator.docblock.class" alias="sk.itcbundle.command.code.generator.docblock.class" public="true"/>
    <service id="console.command.public_alias.sk.itcbundle.command.code.generator.docblock.attribute" alias="sk.itcbundle.command.code.generator.docblock.attribute" public="true"/>
    <service id="console.command.public_alias.sk.itcbundle.command.code.generator.docblock.operation" alias="sk.itcbundle.command.code.generator.docblock.operation" public="true"/>
    <service id="console.command.public_alias.sk.itcbundle.command.code.generator.docblock.parameter" alias="sk.itcbundle.command.code.generator.docblock.parameter" public="true"/>
    <service id="console.command.public_alias.sk.itcbundle.command.code.reflection.file" alias="sk.itcbundle.command.code.reflection.file" public="true"/>
    <service id="console.command.public_alias.sk.itcbundle.command.code.reflection.package" alias="sk.itcbundle.command.code.reflection.package" public="true"/>
    <service id="console.command.public_alias.sk.itcbundle.command.code.reflection.class" alias="sk.itcbundle.command.code.reflection.class" public="true"/>
    <service id="console.command.public_alias.sk.itcbundle.command.code.reflection.attribute" alias="sk.itcbundle.command.code.reflection.attribute" public="true"/>
    <service id="console.command.public_alias.sk.itcbundle.command.code.reflection.operation" alias="sk.itcbundle.command.code.reflection.operation" public="true"/>
    <service id="console.command.public_alias.sk.itcbundle.command.code.reflection.parameter" alias="sk.itcbundle.command.code.reflection.parameter" public="true"/>
    <service id="console.command.public_alias.sk.itcbundle.command.os.release" alias="sk.itcbundle.command.os.release" public="true"/>
    <service id="console.command.public_alias.sk.itcbundle.command.os.name" alias="sk.itcbundle.command.os.name" public="true"/>
  </services>
</container>
